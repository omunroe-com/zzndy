-- Mysql >= 5 required

CREATE DATABASE IF NOT EXISTS league;
USE league;

DROP TABLE IF EXISTS Matches;
DROP TABLE IF EXISTS Games;
DROP TABLE IF EXISTS Prizes;
DROP TABLE IF EXISTS Foes;
DROP TABLE IF EXISTS Players;
DROP TABLE IF EXISTS Judges;
DROP TABLE IF EXISTS Competitions;

CREATE TABLE IF NOT EXISTS Competitions	(
	competition_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	title VARCHAR(128) NOT NULL,
	starts_on TIMESTAMP DEFAULT 0,
	finishes_on TIMESTAMP DEFAULT 0,
	PRIMARY KEY (competition_id),
	UNIQUE KEY (title),
	INDEX (title)
)AUTO_INCREMENT 1000, ENGINE InnoDB, CHARSET utf8;

CREATE TABLE IF NOT EXISTS Judges (
	judge_id INT UNSIGNED AUTO_INCREMENT NOT NULL,
	name VARCHAR(128) NOT NULL,
	PRIMARY KEY (judge_id),
	UNIQUE KEY (name),
	INDEX (name)
)AUTO_INCREMENT 1000, ENGINE InnoDB, CHARSET utf8;

CREATE TABLE IF NOT EXISTS Players	(
	player_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(128) NOT NULL,
	rating DECIMAL(5,2) DEFAULT 0,
	PRIMARY KEY (player_id),
	UNIQUE KEY (name),
	INDEX (name)
)AUTO_INCREMENT 1000, ENGINE InnoDB, CHARSET utf8;

CREATE TABLE IF NOT EXISTS Foes	(
	foe_id INT UNSIGNED AUTO_INCREMENT NOT NULL,
	player_id INT UNSIGNED NOT NULL,
	2nd_player_id INT UNSIGNED,
	type ENUM('Player', 'Pair') DEFAULT 'Player' NOT NULL,
	PRIMARY KEY (foe_id),
	FOREIGN KEY (player_id)     REFERENCES Players (player_id) ON UPDATE CASCADE,
	FOREIGN KEY (2nd_player_id) REFERENCES Players (player_id) ON UPDATE CASCADE
)AUTO_INCREMENT 1000, ENGINE InnoDB, CHARSET utf8;

CREATE TABLE IF NOT EXISTS Prizes (
	prize_id INT UNSIGNED AUTO_INCREMENT NOT NULL,
	title VARCHAR(128) NOT NULL,
	foe_id INT UNSIGNED NOT NULL,
	competition_id INT UNSIGNED,
	PRIMARY KEY (prize_id),
	UNIQUE KEY (title),
	INDEX (title),
	FOREIGN KEY (foe_id)         REFERENCES Foes         (foe_id)         ON UPDATE CASCADE,
	FOREIGN KEY (competition_id) REFERENCES Competitions (competition_id) ON UPDATE CASCADE
)AUTO_INCREMENT 1000, ENGINE InnoDB, CHARSET utf8;

CREATE TABLE IF NOT EXISTS Games	(
	game_id INT UNSIGNED AUTO_INCREMENT NOT NULL, 
	competition_id INT UNSIGNED,
	judge_id INT UNSIGNED,
	1st_foe_id INT UNSIGNED NOT NULL,
	2nd_foe_id INT UNSIGNED NOT NULL,
	scheduled_on TIMESTAMP DEFAULT 0,
	PRIMARY KEY (game_id),
	FOREIGN KEY (competition_id) REFERENCES Competitions (competition_id) ON UPDATE CASCADE,

	FOREIGN KEY (judge_id)       REFERENCES Judges       (judge_id)       ON UPDATE CASCADE,
	FOREIGN KEY (1st_foe_id)     REFERENCES Foes         (foe_id)         ON UPDATE CASCADE,
	FOREIGN KEY (2nd_foe_id)     REFERENCES Foes         (foe_id)         ON UPDATE CASCADE
)AUTO_INCREMENT 1000, ENGINE InnoDB, CHARSET utf8;

CREATE TABLE IF NOT EXISTS Matches	(
	match_id INT UNSIGNED AUTO_INCREMENT NOT NULL,
	game_id INT UNSIGNED NOT NULL,
	serving_player_id INT UNSIGNED NOT NULL,
	1st_foe_score TINYINT UNSIGNED NOT NULL DEFAULT 0,
	2nd_foe_score TINYINT UNSIGNED NOT NULL DEFAULT 0,
	PRIMARY KEY (match_id),
	FOREIGN KEY (game_id) REFERENCES Games (game_id) ON UPDATE CASCADE,
	FOREIGN KEY (serving_player_id) REFERENCES Players (player_id) ON UPDATE CASCADE
)AUTO_INCREMENT 1000, ENGINE InnoDB, CHARSET utf8;

ALTER TABLE Competitions ADD COLUMN (
        created_on TIMESTAMP DEFAULT 0,
        modified_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE Players ADD COLUMN (
        created_on TIMESTAMP DEFAULT 0,
        modified_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE Foes ADD COLUMN (
        created_on TIMESTAMP DEFAULT 0,
        modified_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE Prizes ADD COLUMN (
        created_on TIMESTAMP DEFAULT 0,
        modified_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE Judges ADD COLUMN (
        created_on TIMESTAMP DEFAULT 0,
        modified_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE Games ADD COLUMN (
        created_on TIMESTAMP DEFAULT 0,
        modified_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE Matches ADD COLUMN (
        created_on TIMESTAMP DEFAULT 0,
        modified_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

DELIMITER #

CREATE TRIGGER tr_Competitions_onCreate BEFORE INSERT
ON Competitions FOR EACH ROW
        IF NEW.created_on = 0 THEN
                SET NEW.created_on = CURRENT_TIMESTAMP;
        END IF #

CREATE TRIGGER tr_Players_onCreate BEFORE INSERT
ON Players FOR EACH ROW
        IF NEW.created_on = 0 THEN
                SET NEW.created_on = CURRENT_TIMESTAMP;
        END IF #

CREATE TRIGGER tr_Foes_onCreate BEFORE INSERT
ON Foes FOR EACH ROW
        IF NEW.created_on = 0 THEN
                SET NEW.created_on = CURRENT_TIMESTAMP;
        END IF #

CREATE TRIGGER tr_Prizes_onCreate BEFORE INSERT
ON Prizes FOR EACH ROW
        IF NEW.created_on = 0 THEN
                SET NEW.created_on = CURRENT_TIMESTAMP;
        END IF #

CREATE TRIGGER tr_Judges_onCreate BEFORE INSERT
ON Judges FOR EACH ROW
        IF NEW.created_on = 0 THEN
                SET NEW.created_on = CURRENT_TIMESTAMP;
        END IF #

CREATE TRIGGER tr_Games_onCreate BEFORE INSERT
ON Games FOR EACH ROW
        IF NEW.created_on = 0 THEN
                SET NEW.created_on = CURRENT_TIMESTAMP;
        END IF #

CREATE TRIGGER tr_Matches_onCreate BEFORE INSERT
ON Matches FOR EACH ROW
        IF NEW.created_on = 0 THEN
                SET NEW.created_on = CURRENT_TIMESTAMP;
        END IF #

DELIMITER ;

